<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>VIIgit</groupId>
	<artifactId>swagger-doc</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<asciidoctor.maven.plugin.version>1.5.5</asciidoctor.maven.plugin.version>
		<asciidoctorj.pdf.version>1.5.0-alpha.15</asciidoctorj.pdf.version>
		<asciidoctorj.version>1.5.5</asciidoctorj.version>

		<jruby.version>9.1.8.0</jruby.version>

	    <maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>

		<asciidoctor.source.dir>${project.build.directory}/asciidoc/source</asciidoctor.source.dir>
		<asciidoctor.html.output.directory>${project.build.directory}/asciidoc/html</asciidoctor.html.output.directory>
		<asciidoctor.pdf.output.directory>${project.build.directory}/asciidoc/pdf</asciidoctor.pdf.output.directory>

	</properties>

	<pluginRepositories>
		<pluginRepository>
			<id>jcenter-snapshots</id>
			<name>jcenter</name>
			<url>http://oss.jfrog.org/artifactory/oss-snapshot-local/</url>
		</pluginRepository>
		<pluginRepository>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>jcenter-releases</id>
			<name>jcenter</name>
			<url>http://jcenter.bintray.com</url>
		</pluginRepository>
	</pluginRepositories>

	<repositories>
		<repository>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>jcenter-releases</id>
			<name>jcenter</name>
			<url>http://jcenter.bintray.com</url>
		</repository>


	</repositories>
	<dependencies>

		<dependency>
			<groupId>io.github.swagger2markup</groupId>
			<artifactId>swagger2markup-cli</artifactId>
			<version>1.3.1</version>
		</dependency>

	</dependencies>




	<build>


		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.0.1</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>install</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/maven-dependencies</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>generate-sources-yaml</id>
						<phase>generate-sources</phase>
						<configuration>

							<target name="yaml-to-adoc">
								<apply executable="ls" verbose="true">
									<arg value="-l" />
									<fileset dir="${project.basedir}/docs">
										<patternset>
											<include name="**/*.yaml" />
											<exclude name="api/shared.yaml" />
										</patternset>
									</fileset>
								</apply>

								<apply executable="java" dest="${asciidoctor.source.dir}">
									<arg value="-jar" />
									<arg
										path="${project.build.directory}/maven-dependencies/swagger2markup-cli-1.3.1.jar" />
									<arg value="convert" />
									<arg value="-i" />
									<srcfile />
									<arg value="-f" />
									<targetfile />
									<arg value="-c" />
									<arg path="${project.basedir}/docs/swagger2markup-config.properties" />
									
									<fileset dir="${project.basedir}/docs">
										<patternset>
											<include name="**/*.yaml" />
											<exclude name="api/shared.yaml" />
										</patternset>
									</fileset>
									<mapper type="glob" from="*.yaml" to="*" />
								</apply>
							</target>

						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


			<plugin>
				<groupId>org.asciidoctor</groupId>
				<artifactId>asciidoctor-maven-plugin</artifactId>
				<version>${asciidoctorj.version}</version>

				<dependencies>
					<dependency>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctorj-pdf</artifactId>
						<version>${asciidoctorj.pdf.version}</version>
					</dependency>
					<dependency>
						<groupId>org.jruby</groupId>
						<artifactId>jruby-complete</artifactId>
						<version>${jruby.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<sourceDirectory>${asciidoctor.source.dir}</sourceDirectory>
					<attributes>
						<doctype>article</doctype>
						<toc>left</toc>
						<toclevels>3</toclevels>
						<numbered></numbered>
						<hardbreaks></hardbreaks>
						<sectlinks></sectlinks>
						<sectanchors></sectanchors>
						<linkcss>false</linkcss>
						<revnumber>${project.version}</revnumber>
						<revdate>${maven.build.timestamp}</revdate>
						<organization>${project.organization.name}</organization>
					</attributes>
				</configuration>
				<!-- Since each execution can only handle one backend, run separate executions for each desired output type -->
				<executions>
					<execution>
						<id>output-html</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
						<configuration>
							<backend>html5</backend>
							<outputDirectory>${asciidoctor.html.output.directory}</outputDirectory>
							<preserveDirectories>true</preserveDirectories>
						</configuration>
					</execution>
					<execution>
						<id>output-pdf</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
						<configuration>
							<backend>pdf</backend>
							<outputDirectory>${asciidoctor.pdf.output.directory}</outputDirectory>
							<preserveDirectories>true</preserveDirectories>
							
						</configuration>
					</execution>
				</executions>
			</plugin>



		</plugins>
	</build>
</project>